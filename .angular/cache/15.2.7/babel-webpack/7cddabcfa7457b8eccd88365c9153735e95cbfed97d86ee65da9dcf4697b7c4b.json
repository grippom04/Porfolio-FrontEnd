{"ast":null,"code":"import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./token.service\";\nexport class InterceptorService {\n  constructor(tokenService) {\n    this.tokenService = tokenService;\n  }\n  intercept(req, next) {\n    let intReq = req;\n    const token = this.tokenService.getToken();\n    if (token != null) {\n      intReq = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer' + token)\n      });\n    }\n    return next.handle(intReq);\n  }\n}\nInterceptorService.ɵfac = function InterceptorService_Factory(t) {\n  return new (t || InterceptorService)(i0.ɵɵinject(i1.TokenService));\n};\nInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterceptorService,\n  factory: InterceptorService.ɵfac,\n  providedIn: 'root'\n});\nexport const interceptorProvider = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: InterceptorService,\n  multi: true\n}];","map":{"version":3,"mappings":"AAAA,SAA8CA,iBAAiB,QAAQ,sBAAsB;;;AAQ7F,OAAM,MAAOC,kBAAkB;EAC3BC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;EAAgB;EAEhDC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,IAAIC,MAAM,GAAGF,GAAG;IAChB,MAAMG,KAAK,GAAG,IAAI,CAACL,YAAY,CAACM,QAAQ,EAAE;IAC1C,IAAGD,KAAK,IAAI,IAAI,EAAC;MACbD,MAAM,GAAGF,GAAG,CAACK,KAAK,CAAC;QACfC,OAAO,EAAEN,GAAG,CAACM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC,QAAQ,GAACJ,KAAK;OAC1D,CAAC;;IAEN,OAAOF,IAAI,CAACO,MAAM,CAACN,MAAM,CAAC;EAC9B;;AAZSN,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAa,SAAlBb,kBAAkB;EAAAc,YAFf;AAAM;AAiBtB,OAAO,MAAMC,mBAAmB,GAAG,CAAC;EAChCC,OAAO,EAAEjB,iBAAiB;EAC1BkB,QAAQ,EAAEjB,kBAAkB;EAC5BkB,KAAK,EAAE;CACT,CAAC","names":["HTTP_INTERCEPTORS","InterceptorService","constructor","tokenService","intercept","req","next","intReq","token","getToken","clone","headers","set","handle","factory","providedIn","interceptorProvider","provide","useClass","multi"],"sourceRoot":"","sources":["C:\\Users\\migue\\Desktop\\Argentina Programa\\PortfolioFrontEnd\\PortfolioFrontEnd\\src\\app\\services\\interceptor-service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpRequest, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { TokenService } from \"./token.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class InterceptorService {\r\n    constructor(private tokenService: TokenService){}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\r\n        let intReq = req;\r\n        const token = this.tokenService.getToken();\r\n        if(token != null){\r\n            intReq = req.clone({\r\n                headers: req.headers.set('Authorization','Bearer'+token)\r\n            });\r\n        }\r\n        return next.handle(intReq);\r\n    }\r\n}\r\n\r\nexport const interceptorProvider = [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: InterceptorService,\r\n    multi: true\r\n }];\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}