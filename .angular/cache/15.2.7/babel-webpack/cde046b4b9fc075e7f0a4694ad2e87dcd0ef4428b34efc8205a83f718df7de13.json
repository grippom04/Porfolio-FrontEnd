{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/migue/Desktop/Argentina Programa/PortfolioFrontEnd/PortfolioFrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getDownloadURL, list, ref, uploadBytes } from '@angular/fire/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/storage\";\nexport class ImageServiceService {\n  constructor(storage) {\n    this.storage = storage;\n    this.url = \"\";\n  }\n  upLoadImages($event, name) {\n    const image = $event.target.files[0];\n    const imgRef = ref(this.storage, `images/` + name);\n    uploadBytes(imgRef, image).then(response => {\n      this.getImages();\n    }).catch(error => console.log(error));\n  }\n  getImages() {\n    var _this = this;\n    const imgRef = ref(this.storage, 'images');\n    list(imgRef).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (response) {\n        for (let item of response.items) {\n          _this.url = yield getDownloadURL(item);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(error => console.log(error));\n  }\n}\nImageServiceService.ɵfac = function ImageServiceService_Factory(t) {\n  return new (t || ImageServiceService)(i0.ɵɵinject(i1.Storage));\n};\nImageServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageServiceService,\n  factory: ImageServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAAkBA,cAAc,EAAEC,IAAI,EAAEC,GAAG,EAAEC,WAAW,QAAO,uBAAuB;;;AAKtF,OAAM,MAAOC,mBAAmB;EAE9BC,YAAoBC,OAAiB;IAAjB,YAAO,GAAPA,OAAO;IAD3B,QAAG,GAAW,EAAE;EACyB;EAGlCC,YAAY,CAACC,MAAY,EAAEC,IAAY;IAC5C,MAAMC,KAAK,GAAGF,MAAM,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACpC,MAAMC,MAAM,GAAGX,GAAG,CAAC,IAAI,CAACI,OAAO,EAAC,SAAS,GAAEG,IAAI,CAAC;IAChDN,WAAW,CAACU,MAAM,EAACH,KAAK,CAAC,CACxBI,IAAI,CAACC,QAAQ,IAAG;MAAE,IAAI,CAACC,SAAS,EAAE;IAAC,CAAC,CAAC,CACrCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAErC;EAEAF,SAAS;IAAA;IACP,MAAMH,MAAM,GAAGX,GAAG,CAAC,IAAI,CAACI,OAAO,EAAC,QAAQ,CAAC;IACzCL,IAAI,CAACY,MAAM,CAAC,CACXC,IAAI;MAAA,6BAAC,WAAMC,QAAQ,EAAG;QACrB,KAAK,IAAIM,IAAI,IAAIN,QAAQ,CAACO,KAAK,EAAE;UAC/B,KAAI,CAACC,GAAG,SAASvB,cAAc,CAACqB,IAAI,CAAC;;MAEzC,CAAC;MAAA;QAAA;MAAA;IAAA,IAAC,CACDJ,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACrC;;AAvBWd,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAoB,SAAnBpB,mBAAmB;EAAAqB,YAFlB;AAAM","names":["getDownloadURL","list","ref","uploadBytes","ImageServiceService","constructor","storage","upLoadImages","$event","name","image","target","files","imgRef","then","response","getImages","catch","error","console","log","item","items","url","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\migue\\Desktop\\Argentina Programa\\PortfolioFrontEnd\\PortfolioFrontEnd\\src\\app\\services\\image-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Storage, getDownloadURL, list, ref, uploadBytes} from '@angular/fire/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageServiceService {\n  url :string = \"\";\n  constructor(private storage : Storage) { }\n\n\n  public upLoadImages($event : any, name :string ){\n    const image = $event.target.files[0]\n    const imgRef = ref(this.storage,`images/`+ name)\n    uploadBytes(imgRef,image)\n    .then(response => {this.getImages() })\n    .catch(error => console.log(error))\n    \n  }\n\n  getImages(){\n    const imgRef = ref(this.storage,'images')\n    list(imgRef)\n    .then(async response => {\n      for (let item of response.items) {\n        this.url = await getDownloadURL(item)\n      }\n    })\n    .catch(error => console.log(error))\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}